{"version":3,"sources":["../node_modules/codemirror/addon/display/placeholder.js"],"names":["CodeMirror","clearPlaceholder","cm","state","placeholder","parentNode","removeChild","setPlaceholder","elt","document","createElement","style","cssText","direction","getOption","className","placeHolder","createTextNode","appendChild","display","lineSpace","insertBefore","firstChild","onComposition","setTimeout","empty","lineCount","input","getInputField","nodeName","getLine","length","test","querySelector","textContent","onBlur","isEmpty","onChange","wrapper","getWrapperElement","replace","defineOption","val","old","prev","Init","on","placeholderCompose","off","hasFocus","mod","require"],"mappings":"iFAUG,SAASA,GAsBV,SAASC,EAAiBC,GACpBA,EAAGC,MAAMC,cACXF,EAAGC,MAAMC,YAAYC,WAAWC,YAAYJ,EAAGC,MAAMC,aACrDF,EAAGC,MAAMC,YAAc,MAG3B,SAASG,EAAeL,GACtBD,EAAiBC,GACjB,IAAIM,EAAMN,EAAGC,MAAMC,YAAcK,SAASC,cAAc,OACxDF,EAAIG,MAAMC,QAAU,+BACpBJ,EAAIG,MAAME,UAAYX,EAAGY,UAAU,aACnCN,EAAIO,UAAY,8CAChB,IAAIC,EAAcd,EAAGY,UAAU,eACL,iBAAfE,IAAyBA,EAAcP,SAASQ,eAAeD,IAC1ER,EAAIU,YAAYF,GAChBd,EAAGiB,QAAQC,UAAUC,aAAab,EAAKN,EAAGiB,QAAQC,UAAUE,YAG9D,SAASC,EAAcrB,GACrBsB,YAAW,WACT,IAAIC,GAAQ,EACZ,GAAsB,GAAlBvB,EAAGwB,YAAkB,CACvB,IAAIC,EAAQzB,EAAG0B,gBACfH,EAA0B,YAAlBE,EAAME,UAA0B3B,EAAG4B,QAAQ,GAAGC,QACjD,YAAYC,KAAKL,EAAMM,cAAc,oBAAoBC,aAE5DT,EAAOlB,EAAeL,GACrBD,EAAiBC,KACrB,IAGL,SAASiC,EAAOjC,GACVkC,EAAQlC,IAAKK,EAAeL,GAElC,SAASmC,EAASnC,GAChB,IAAIoC,EAAUpC,EAAGqC,oBAAqBd,EAAQW,EAAQlC,GACtDoC,EAAQvB,UAAYuB,EAAQvB,UAAUyB,QAAQ,oBAAqB,KAAOf,EAAQ,oBAAsB,IAEpGA,EAAOlB,EAAeL,GACrBD,EAAiBC,GAGxB,SAASkC,EAAQlC,GACf,OAA2B,IAAnBA,EAAGwB,aAAyC,KAAlBxB,EAAG4B,QAAQ,GAhE/C9B,EAAWyC,aAAa,cAAe,IAAI,SAASvC,EAAIwC,EAAKC,GAC3D,IAAIC,EAAOD,GAAOA,GAAO3C,EAAW6C,KACpC,GAAIH,IAAQE,EACV1C,EAAG4C,GAAG,OAAQX,GACdjC,EAAG4C,GAAG,SAAUT,GAChBnC,EAAG4C,GAAG,UAAWT,GACjBrC,EAAW8C,GAAG5C,EAAG0B,gBAAiB,oBAAqB1B,EAAGC,MAAM4C,mBAAqB,WAAaxB,EAAcrB,KAChHmC,EAASnC,QACJ,IAAKwC,GAAOE,EAAM,CACvB1C,EAAG8C,IAAI,OAAQb,GACfjC,EAAG8C,IAAI,SAAUX,GACjBnC,EAAG8C,IAAI,UAAWX,GAClBrC,EAAWgD,IAAI9C,EAAG0B,gBAAiB,oBAAqB1B,EAAGC,MAAM4C,oBACjE9C,EAAiBC,GACjB,IAAIoC,EAAUpC,EAAGqC,oBACjBD,EAAQvB,UAAYuB,EAAQvB,UAAUyB,QAAQ,oBAAqB,IAGjEE,IAAQxC,EAAG+C,YAAYd,EAAOjC,MAxBlCgD,CAAIC,EAAQ","file":"static/js/9.b704ab88.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  CodeMirror.defineOption(\"placeholder\", \"\", function(cm, val, old) {\n    var prev = old && old != CodeMirror.Init;\n    if (val && !prev) {\n      cm.on(\"blur\", onBlur);\n      cm.on(\"change\", onChange);\n      cm.on(\"swapDoc\", onChange);\n      CodeMirror.on(cm.getInputField(), \"compositionupdate\", cm.state.placeholderCompose = function() { onComposition(cm) })\n      onChange(cm);\n    } else if (!val && prev) {\n      cm.off(\"blur\", onBlur);\n      cm.off(\"change\", onChange);\n      cm.off(\"swapDoc\", onChange);\n      CodeMirror.off(cm.getInputField(), \"compositionupdate\", cm.state.placeholderCompose)\n      clearPlaceholder(cm);\n      var wrapper = cm.getWrapperElement();\n      wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\");\n    }\n\n    if (val && !cm.hasFocus()) onBlur(cm);\n  });\n\n  function clearPlaceholder(cm) {\n    if (cm.state.placeholder) {\n      cm.state.placeholder.parentNode.removeChild(cm.state.placeholder);\n      cm.state.placeholder = null;\n    }\n  }\n  function setPlaceholder(cm) {\n    clearPlaceholder(cm);\n    var elt = cm.state.placeholder = document.createElement(\"pre\");\n    elt.style.cssText = \"height: 0; overflow: visible\";\n    elt.style.direction = cm.getOption(\"direction\");\n    elt.className = \"CodeMirror-placeholder CodeMirror-line-like\";\n    var placeHolder = cm.getOption(\"placeholder\")\n    if (typeof placeHolder == \"string\") placeHolder = document.createTextNode(placeHolder)\n    elt.appendChild(placeHolder)\n    cm.display.lineSpace.insertBefore(elt, cm.display.lineSpace.firstChild);\n  }\n\n  function onComposition(cm) {\n    setTimeout(function() {\n      var empty = false\n      if (cm.lineCount() == 1) {\n        var input = cm.getInputField()\n        empty = input.nodeName == \"TEXTAREA\" ? !cm.getLine(0).length\n          : !/[^\\u200b]/.test(input.querySelector(\".CodeMirror-line\").textContent)\n      }\n      if (empty) setPlaceholder(cm)\n      else clearPlaceholder(cm)\n    }, 20)\n  }\n\n  function onBlur(cm) {\n    if (isEmpty(cm)) setPlaceholder(cm);\n  }\n  function onChange(cm) {\n    var wrapper = cm.getWrapperElement(), empty = isEmpty(cm);\n    wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\") + (empty ? \" CodeMirror-empty\" : \"\");\n\n    if (empty) setPlaceholder(cm);\n    else clearPlaceholder(cm);\n  }\n\n  function isEmpty(cm) {\n    return (cm.lineCount() === 1) && (cm.getLine(0) === \"\");\n  }\n});\n"],"sourceRoot":""}