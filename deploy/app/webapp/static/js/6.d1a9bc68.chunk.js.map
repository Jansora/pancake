{"version":3,"sources":["../node_modules/codemirror/mode/gfm/gfm.js","../node_modules/codemirror/mode/markdown/markdown.js","../node_modules/codemirror/mode/xml/xml.js","../node_modules/codemirror/mode/meta.js","../node_modules/codemirror/addon/mode/overlay.js"],"names":["CodeMirror","urlRE","defineMode","config","modeConfig","codeDepth","blankLine","state","code","gfmOverlay","startState","codeBlock","ateSpace","copyState","s","token","stream","combineTokens","match","skipToEnd","sol","peek","next","before","pos","eatWhile","difference","eatSpace","gitHubSpice","string","slice","start","test","charAt","markdownConfig","taskLists","strikethrough","emoji","attr","name","overlayMode","getMode","defineMIME","mod","require","cmCfg","modeCfg","htmlMode","htmlModeMissing","findModeByName","found","mime","mimes","mode","undefined","highlightFormatting","maxBlockquoteDepth","fencedCodeBlockHighlighting","fencedCodeBlockDefaultMode","xml","tokenTypeOverrides","tokenTypes","header","quote","list1","list2","list3","hr","image","imageAltText","imageMarker","formatting","linkInline","linkEmail","linkText","linkHref","em","strong","tokenType","hasOwnProperty","hrRE","listRE","taskListRE","atxHeaderRE","allowAtxHeaderWithoutSpace","setextHeaderRE","textRE","fencedCodeRE","linkDefRE","punctuation","expandedTab","switchInline","f","inline","switchBlock","block","lineIsEmpty","line","linkTitle","indentedCode","htmlBlock","exit","inner","innerMode","htmlState","tagStart","context","tokenize","isInText","inlineNormal","blockNormal","trailingSpace","trailingSpaceNewLine","prevLine","thisLine","firstTokenOnLine","column","indentation","prevLineLineIsEmpty","prevLineIsIndentedCode","prevLineIsHr","prevLineIsList","list","maxNonCodeIndentation","listStack","length","lineIndentation","indentationDiff","pop","allowsInlineContinuation","fencedCodeEnd","isHr","getType","eat","setext","listType","current","push","taskList","fencedEndRE","RegExp","localMode","localState","local","lookAhead","footnoteLink","style","md_inside","indexOf","returnType","currListInd","hasExitedList","maxFencedEndInd","styles","i","taskOpen","join","taskClosed","listMod","handleText","text","ch","matchCh","regex","replace","previousFormatting","count","t","type","formattingEscape","end","atts","substring","backUp","len","after","leftFlanking","rightFlanking","setEm","setStrong","retType","getLinkHrefInside","linkRE","endChar","returnState","footnoteLinkInside","footnoteUrl","indent","textAfter","Pass","blockCommentStart","blockCommentEnd","closeBrackets","fold","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","setStyle","indentUnit","defaults","prop","inText","chain","parser","inBlock","doctype","inTag","baseState","tagName","inAttribute","stringStartCol","closure","eol","isInAttribute","terminator","depth","Context","startOfLine","this","prev","indented","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","baseIndent","fullLine","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","configuration","helperType","skipAttribute","xmlCurrentTag","close","xmlCurrentContext","cx","reverse","mimeModes","modeInfo","ext","file","alias","info","findModeByMIME","toLowerCase","j","findModeByExtension","findModeByFileName","filename","dot","lastIndexOf","base","overlay","combine","basePos","baseCur","overlayPos","overlayCur","streamSeen","Math","min","electricChars","baseToken","overlayToken"],"mappings":"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","file":"static/js/6.d1a9bc68.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../markdown/markdown\"), require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../markdown/markdown\", \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar urlRE = /^((?:(?:aaas?|about|acap|adiumxtra|af[ps]|aim|apt|attachment|aw|beshare|bitcoin|bolo|callto|cap|chrome(?:-extension)?|cid|coap|com-eventbrite-attendee|content|crid|cvs|data|dav|dict|dlna-(?:playcontainer|playsingle)|dns|doi|dtn|dvb|ed2k|facetime|feed|file|finger|fish|ftp|geo|gg|git|gizmoproject|go|gopher|gtalk|h323|hcp|https?|iax|icap|icon|im|imap|info|ipn|ipp|irc[6s]?|iris(?:\\.beep|\\.lwz|\\.xpc|\\.xpcs)?|itms|jar|javascript|jms|keyparc|lastfm|ldaps?|magnet|mailto|maps|market|message|mid|mms|ms-help|msnim|msrps?|mtqp|mumble|mupdate|mvn|news|nfs|nih?|nntp|notes|oid|opaquelocktoken|palm|paparazzi|platform|pop|pres|proxy|psyc|query|res(?:ource)?|rmi|rsync|rtmp|rtsp|secondlife|service|session|sftp|sgn|shttp|sieve|sips?|skype|sm[bs]|snmp|soap\\.beeps?|soldat|spotify|ssh|steam|svn|tag|teamspeak|tel(?:net)?|tftp|things|thismessage|tip|tn3270|tv|udp|unreal|urn|ut2004|vemmi|ventrilo|view-source|webcal|wss?|wtai|wyciwyg|xcon(?:-userid)?|xfire|xmlrpc\\.beeps?|xmpp|xri|ymsgr|z39\\.50[rs]?):(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]|\\([^\\s()<>]*\\))+(?:\\([^\\s()<>]*\\)|[^\\s`*!()\\[\\]{};:'\".,<>?«»“”‘’]))/i\n\nCodeMirror.defineMode(\"gfm\", function(config, modeConfig) {\n  var codeDepth = 0;\n  function blankLine(state) {\n    state.code = false;\n    return null;\n  }\n  var gfmOverlay = {\n    startState: function() {\n      return {\n        code: false,\n        codeBlock: false,\n        ateSpace: false\n      };\n    },\n    copyState: function(s) {\n      return {\n        code: s.code,\n        codeBlock: s.codeBlock,\n        ateSpace: s.ateSpace\n      };\n    },\n    token: function(stream, state) {\n      state.combineTokens = null;\n\n      // Hack to prevent formatting override inside code blocks (block and inline)\n      if (state.codeBlock) {\n        if (stream.match(/^```+/)) {\n          state.codeBlock = false;\n          return null;\n        }\n        stream.skipToEnd();\n        return null;\n      }\n      if (stream.sol()) {\n        state.code = false;\n      }\n      if (stream.sol() && stream.match(/^```+/)) {\n        stream.skipToEnd();\n        state.codeBlock = true;\n        return null;\n      }\n      // If this block is changed, it may need to be updated in Markdown mode\n      if (stream.peek() === '`') {\n        stream.next();\n        var before = stream.pos;\n        stream.eatWhile('`');\n        var difference = 1 + stream.pos - before;\n        if (!state.code) {\n          codeDepth = difference;\n          state.code = true;\n        } else {\n          if (difference === codeDepth) { // Must be exact\n            state.code = false;\n          }\n        }\n        return null;\n      } else if (state.code) {\n        stream.next();\n        return null;\n      }\n      // Check if space. If so, links can be formatted later on\n      if (stream.eatSpace()) {\n        state.ateSpace = true;\n        return null;\n      }\n      if (stream.sol() || state.ateSpace) {\n        state.ateSpace = false;\n        if (modeConfig.gitHubSpice !== false) {\n          if(stream.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+@)?(?=.{0,6}\\d)(?:[a-f0-9]{7,40}\\b)/)) {\n            // User/Project@SHA\n            // User@SHA\n            // SHA\n            state.combineTokens = true;\n            return \"link\";\n          } else if (stream.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+)?#[0-9]+\\b/)) {\n            // User/Project#Num\n            // User#Num\n            // #Num\n            state.combineTokens = true;\n            return \"link\";\n          }\n        }\n      }\n      if (stream.match(urlRE) &&\n          stream.string.slice(stream.start - 2, stream.start) != \"](\" &&\n          (stream.start == 0 || /\\W/.test(stream.string.charAt(stream.start - 1)))) {\n        // URLs\n        // Taken from http://daringfireball.net/2010/07/improved_regex_for_matching_urls\n        // And then (issue #1160) simplified to make it not crash the Chrome Regexp engine\n        // And then limited url schemes to the CommonMark list, so foo:bar isn't matched as a URL\n        state.combineTokens = true;\n        return \"link\";\n      }\n      stream.next();\n      return null;\n    },\n    blankLine: blankLine\n  };\n\n  var markdownConfig = {\n    taskLists: true,\n    strikethrough: true,\n    emoji: true\n  };\n  for (var attr in modeConfig) {\n    markdownConfig[attr] = modeConfig[attr];\n  }\n  markdownConfig.name = \"markdown\";\n  return CodeMirror.overlayMode(CodeMirror.getMode(config, markdownConfig), gfmOverlay);\n\n}, \"markdown\");\n\n  CodeMirror.defineMIME(\"text/x-gfm\", \"gfm\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../meta\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../meta\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"markdown\", function(cmCfg, modeCfg) {\n\n  var htmlMode = CodeMirror.getMode(cmCfg, \"text/html\");\n  var htmlModeMissing = htmlMode.name == \"null\"\n\n  function getMode(name) {\n    if (CodeMirror.findModeByName) {\n      var found = CodeMirror.findModeByName(name);\n      if (found) name = found.mime || found.mimes[0];\n    }\n    var mode = CodeMirror.getMode(cmCfg, name);\n    return mode.name == \"null\" ? null : mode;\n  }\n\n  // Should characters that affect highlighting be highlighted separate?\n  // Does not include characters that will be output (such as `1.` and `-` for lists)\n  if (modeCfg.highlightFormatting === undefined)\n    modeCfg.highlightFormatting = false;\n\n  // Maximum number of nested blockquotes. Set to 0 for infinite nesting.\n  // Excess `>` will emit `error` token.\n  if (modeCfg.maxBlockquoteDepth === undefined)\n    modeCfg.maxBlockquoteDepth = 0;\n\n  // Turn on task lists? (\"- [ ] \" and \"- [x] \")\n  if (modeCfg.taskLists === undefined) modeCfg.taskLists = false;\n\n  // Turn on strikethrough syntax\n  if (modeCfg.strikethrough === undefined)\n    modeCfg.strikethrough = false;\n\n  if (modeCfg.emoji === undefined)\n    modeCfg.emoji = false;\n\n  if (modeCfg.fencedCodeBlockHighlighting === undefined)\n    modeCfg.fencedCodeBlockHighlighting = true;\n\n  if (modeCfg.fencedCodeBlockDefaultMode === undefined)\n    modeCfg.fencedCodeBlockDefaultMode = 'text/plain';\n\n  if (modeCfg.xml === undefined)\n    modeCfg.xml = true;\n\n  // Allow token types to be overridden by user-provided token types.\n  if (modeCfg.tokenTypeOverrides === undefined)\n    modeCfg.tokenTypeOverrides = {};\n\n  var tokenTypes = {\n    header: \"header\",\n    code: \"comment\",\n    quote: \"quote\",\n    list1: \"variable-2\",\n    list2: \"variable-3\",\n    list3: \"keyword\",\n    hr: \"hr\",\n    image: \"image\",\n    imageAltText: \"image-alt-text\",\n    imageMarker: \"image-marker\",\n    formatting: \"formatting\",\n    linkInline: \"link\",\n    linkEmail: \"link\",\n    linkText: \"link\",\n    linkHref: \"string\",\n    em: \"em\",\n    strong: \"strong\",\n    strikethrough: \"strikethrough\",\n    emoji: \"builtin\"\n  };\n\n  for (var tokenType in tokenTypes) {\n    if (tokenTypes.hasOwnProperty(tokenType) && modeCfg.tokenTypeOverrides[tokenType]) {\n      tokenTypes[tokenType] = modeCfg.tokenTypeOverrides[tokenType];\n    }\n  }\n\n  var hrRE = /^([*\\-_])(?:\\s*\\1){2,}\\s*$/\n  ,   listRE = /^(?:[*\\-+]|^[0-9]+([.)]))\\s+/\n  ,   taskListRE = /^\\[(x| )\\](?=\\s)/i // Must follow listRE\n  ,   atxHeaderRE = modeCfg.allowAtxHeaderWithoutSpace ? /^(#+)/ : /^(#+)(?: |$)/\n  ,   setextHeaderRE = /^ {0,3}(?:\\={1,}|-{2,})\\s*$/\n  ,   textRE = /^[^#!\\[\\]*_\\\\<>` \"'(~:]+/\n  ,   fencedCodeRE = /^(~~~+|```+)[ \\t]*([\\w\\/+#-]*)[^\\n`]*$/\n  ,   linkDefRE = /^\\s*\\[[^\\]]+?\\]:.*$/ // naive link-definition\n  ,   punctuation = /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E42\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC9\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDF3C-\\uDF3E]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]/\n  ,   expandedTab = \"    \" // CommonMark specifies tab as 4 spaces\n\n  function switchInline(stream, state, f) {\n    state.f = state.inline = f;\n    return f(stream, state);\n  }\n\n  function switchBlock(stream, state, f) {\n    state.f = state.block = f;\n    return f(stream, state);\n  }\n\n  function lineIsEmpty(line) {\n    return !line || !/\\S/.test(line.string)\n  }\n\n  // Blocks\n\n  function blankLine(state) {\n    // Reset linkTitle state\n    state.linkTitle = false;\n    state.linkHref = false;\n    state.linkText = false;\n    // Reset EM state\n    state.em = false;\n    // Reset STRONG state\n    state.strong = false;\n    // Reset strikethrough state\n    state.strikethrough = false;\n    // Reset state.quote\n    state.quote = 0;\n    // Reset state.indentedCode\n    state.indentedCode = false;\n    if (state.f == htmlBlock) {\n      var exit = htmlModeMissing\n      if (!exit) {\n        var inner = CodeMirror.innerMode(htmlMode, state.htmlState)\n        exit = inner.mode.name == \"xml\" && inner.state.tagStart === null &&\n          (!inner.state.context && inner.state.tokenize.isInText)\n      }\n      if (exit) {\n        state.f = inlineNormal;\n        state.block = blockNormal;\n        state.htmlState = null;\n      }\n    }\n    // Reset state.trailingSpace\n    state.trailingSpace = 0;\n    state.trailingSpaceNewLine = false;\n    // Mark this line as blank\n    state.prevLine = state.thisLine\n    state.thisLine = {stream: null}\n    return null;\n  }\n\n  function blockNormal(stream, state) {\n    var firstTokenOnLine = stream.column() === state.indentation;\n    var prevLineLineIsEmpty = lineIsEmpty(state.prevLine.stream);\n    var prevLineIsIndentedCode = state.indentedCode;\n    var prevLineIsHr = state.prevLine.hr;\n    var prevLineIsList = state.list !== false;\n    var maxNonCodeIndentation = (state.listStack[state.listStack.length - 1] || 0) + 3;\n\n    state.indentedCode = false;\n\n    var lineIndentation = state.indentation;\n    // compute once per line (on first token)\n    if (state.indentationDiff === null) {\n      state.indentationDiff = state.indentation;\n      if (prevLineIsList) {\n        state.list = null;\n        // While this list item's marker's indentation is less than the deepest\n        //  list item's content's indentation,pop the deepest list item\n        //  indentation off the stack, and update block indentation state\n        while (lineIndentation < state.listStack[state.listStack.length - 1]) {\n          state.listStack.pop();\n          if (state.listStack.length) {\n            state.indentation = state.listStack[state.listStack.length - 1];\n          // less than the first list's indent -> the line is no longer a list\n          } else {\n            state.list = false;\n          }\n        }\n        if (state.list !== false) {\n          state.indentationDiff = lineIndentation - state.listStack[state.listStack.length - 1]\n        }\n      }\n    }\n\n    // not comprehensive (currently only for setext detection purposes)\n    var allowsInlineContinuation = (\n        !prevLineLineIsEmpty && !prevLineIsHr && !state.prevLine.header &&\n        (!prevLineIsList || !prevLineIsIndentedCode) &&\n        !state.prevLine.fencedCodeEnd\n    );\n\n    var isHr = (state.list === false || prevLineIsHr || prevLineLineIsEmpty) &&\n      state.indentation <= maxNonCodeIndentation && stream.match(hrRE);\n\n    var match = null;\n    if (state.indentationDiff >= 4 && (prevLineIsIndentedCode || state.prevLine.fencedCodeEnd ||\n         state.prevLine.header || prevLineLineIsEmpty)) {\n      stream.skipToEnd();\n      state.indentedCode = true;\n      return tokenTypes.code;\n    } else if (stream.eatSpace()) {\n      return null;\n    } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(atxHeaderRE)) && match[1].length <= 6) {\n      state.quote = 0;\n      state.header = match[1].length;\n      state.thisLine.header = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      state.f = state.inline;\n      return getType(state);\n    } else if (state.indentation <= maxNonCodeIndentation && stream.eat('>')) {\n      state.quote = firstTokenOnLine ? 1 : state.quote + 1;\n      if (modeCfg.highlightFormatting) state.formatting = \"quote\";\n      stream.eatSpace();\n      return getType(state);\n    } else if (!isHr && !state.setext && firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(listRE))) {\n      var listType = match[1] ? \"ol\" : \"ul\";\n\n      state.indentation = lineIndentation + stream.current().length;\n      state.list = true;\n      state.quote = 0;\n\n      // Add this list item's content's indentation to the stack\n      state.listStack.push(state.indentation);\n      // Reset inline styles which shouldn't propagate aross list items\n      state.em = false;\n      state.strong = false;\n      state.code = false;\n      state.strikethrough = false;\n\n      if (modeCfg.taskLists && stream.match(taskListRE, false)) {\n        state.taskList = true;\n      }\n      state.f = state.inline;\n      if (modeCfg.highlightFormatting) state.formatting = [\"list\", \"list-\" + listType];\n      return getType(state);\n    } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(fencedCodeRE, true))) {\n      state.quote = 0;\n      state.fencedEndRE = new RegExp(match[1] + \"+ *$\");\n      // try switching mode\n      state.localMode = modeCfg.fencedCodeBlockHighlighting && getMode(match[2] || modeCfg.fencedCodeBlockDefaultMode );\n      if (state.localMode) state.localState = CodeMirror.startState(state.localMode);\n      state.f = state.block = local;\n      if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n      state.code = -1\n      return getType(state);\n    // SETEXT has lowest block-scope precedence after HR, so check it after\n    //  the others (code, blockquote, list...)\n    } else if (\n      // if setext set, indicates line after ---/===\n      state.setext || (\n        // line before ---/===\n        (!allowsInlineContinuation || !prevLineIsList) && !state.quote && state.list === false &&\n        !state.code && !isHr && !linkDefRE.test(stream.string) &&\n        (match = stream.lookAhead(1)) && (match = match.match(setextHeaderRE))\n      )\n    ) {\n      if ( !state.setext ) {\n        state.header = match[0].charAt(0) == '=' ? 1 : 2;\n        state.setext = state.header;\n      } else {\n        state.header = state.setext;\n        // has no effect on type so we can reset it now\n        state.setext = 0;\n        stream.skipToEnd();\n        if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      }\n      state.thisLine.header = true;\n      state.f = state.inline;\n      return getType(state);\n    } else if (isHr) {\n      stream.skipToEnd();\n      state.hr = true;\n      state.thisLine.hr = true;\n      return tokenTypes.hr;\n    } else if (stream.peek() === '[') {\n      return switchInline(stream, state, footnoteLink);\n    }\n\n    return switchInline(stream, state, state.inline);\n  }\n\n  function htmlBlock(stream, state) {\n    var style = htmlMode.token(stream, state.htmlState);\n    if (!htmlModeMissing) {\n      var inner = CodeMirror.innerMode(htmlMode, state.htmlState)\n      if ((inner.mode.name == \"xml\" && inner.state.tagStart === null &&\n           (!inner.state.context && inner.state.tokenize.isInText)) ||\n          (state.md_inside && stream.current().indexOf(\">\") > -1)) {\n        state.f = inlineNormal;\n        state.block = blockNormal;\n        state.htmlState = null;\n      }\n    }\n    return style;\n  }\n\n  function local(stream, state) {\n    var currListInd = state.listStack[state.listStack.length - 1] || 0;\n    var hasExitedList = state.indentation < currListInd;\n    var maxFencedEndInd = currListInd + 3;\n    if (state.fencedEndRE && state.indentation <= maxFencedEndInd && (hasExitedList || stream.match(state.fencedEndRE))) {\n      if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n      var returnType;\n      if (!hasExitedList) returnType = getType(state)\n      state.localMode = state.localState = null;\n      state.block = blockNormal;\n      state.f = inlineNormal;\n      state.fencedEndRE = null;\n      state.code = 0\n      state.thisLine.fencedCodeEnd = true;\n      if (hasExitedList) return switchBlock(stream, state, state.block);\n      return returnType;\n    } else if (state.localMode) {\n      return state.localMode.token(stream, state.localState);\n    } else {\n      stream.skipToEnd();\n      return tokenTypes.code;\n    }\n  }\n\n  // Inline\n  function getType(state) {\n    var styles = [];\n\n    if (state.formatting) {\n      styles.push(tokenTypes.formatting);\n\n      if (typeof state.formatting === \"string\") state.formatting = [state.formatting];\n\n      for (var i = 0; i < state.formatting.length; i++) {\n        styles.push(tokenTypes.formatting + \"-\" + state.formatting[i]);\n\n        if (state.formatting[i] === \"header\") {\n          styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.header);\n        }\n\n        // Add `formatting-quote` and `formatting-quote-#` for blockquotes\n        // Add `error` instead if the maximum blockquote nesting depth is passed\n        if (state.formatting[i] === \"quote\") {\n          if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n            styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.quote);\n          } else {\n            styles.push(\"error\");\n          }\n        }\n      }\n    }\n\n    if (state.taskOpen) {\n      styles.push(\"meta\");\n      return styles.length ? styles.join(' ') : null;\n    }\n    if (state.taskClosed) {\n      styles.push(\"property\");\n      return styles.length ? styles.join(' ') : null;\n    }\n\n    if (state.linkHref) {\n      styles.push(tokenTypes.linkHref, \"url\");\n    } else { // Only apply inline styles to non-url text\n      if (state.strong) { styles.push(tokenTypes.strong); }\n      if (state.em) { styles.push(tokenTypes.em); }\n      if (state.strikethrough) { styles.push(tokenTypes.strikethrough); }\n      if (state.emoji) { styles.push(tokenTypes.emoji); }\n      if (state.linkText) { styles.push(tokenTypes.linkText); }\n      if (state.code) { styles.push(tokenTypes.code); }\n      if (state.image) { styles.push(tokenTypes.image); }\n      if (state.imageAltText) { styles.push(tokenTypes.imageAltText, \"link\"); }\n      if (state.imageMarker) { styles.push(tokenTypes.imageMarker); }\n    }\n\n    if (state.header) { styles.push(tokenTypes.header, tokenTypes.header + \"-\" + state.header); }\n\n    if (state.quote) {\n      styles.push(tokenTypes.quote);\n\n      // Add `quote-#` where the maximum for `#` is modeCfg.maxBlockquoteDepth\n      if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n        styles.push(tokenTypes.quote + \"-\" + state.quote);\n      } else {\n        styles.push(tokenTypes.quote + \"-\" + modeCfg.maxBlockquoteDepth);\n      }\n    }\n\n    if (state.list !== false) {\n      var listMod = (state.listStack.length - 1) % 3;\n      if (!listMod) {\n        styles.push(tokenTypes.list1);\n      } else if (listMod === 1) {\n        styles.push(tokenTypes.list2);\n      } else {\n        styles.push(tokenTypes.list3);\n      }\n    }\n\n    if (state.trailingSpaceNewLine) {\n      styles.push(\"trailing-space-new-line\");\n    } else if (state.trailingSpace) {\n      styles.push(\"trailing-space-\" + (state.trailingSpace % 2 ? \"a\" : \"b\"));\n    }\n\n    return styles.length ? styles.join(' ') : null;\n  }\n\n  function handleText(stream, state) {\n    if (stream.match(textRE, true)) {\n      return getType(state);\n    }\n    return undefined;\n  }\n\n  function inlineNormal(stream, state) {\n    var style = state.text(stream, state);\n    if (typeof style !== 'undefined')\n      return style;\n\n    if (state.list) { // List marker (*, +, -, 1., etc)\n      state.list = null;\n      return getType(state);\n    }\n\n    if (state.taskList) {\n      var taskOpen = stream.match(taskListRE, true)[1] === \" \";\n      if (taskOpen) state.taskOpen = true;\n      else state.taskClosed = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"task\";\n      state.taskList = false;\n      return getType(state);\n    }\n\n    state.taskOpen = false;\n    state.taskClosed = false;\n\n    if (state.header && stream.match(/^#+$/, true)) {\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      return getType(state);\n    }\n\n    var ch = stream.next();\n\n    // Matches link titles present on next line\n    if (state.linkTitle) {\n      state.linkTitle = false;\n      var matchCh = ch;\n      if (ch === '(') {\n        matchCh = ')';\n      }\n      matchCh = (matchCh+'').replace(/([.?*+^\\[\\]\\\\(){}|-])/g, \"\\\\$1\");\n      var regex = '^\\\\s*(?:[^' + matchCh + '\\\\\\\\]+|\\\\\\\\\\\\\\\\|\\\\\\\\.)' + matchCh;\n      if (stream.match(new RegExp(regex), true)) {\n        return tokenTypes.linkHref;\n      }\n    }\n\n    // If this block is changed, it may need to be updated in GFM mode\n    if (ch === '`') {\n      var previousFormatting = state.formatting;\n      if (modeCfg.highlightFormatting) state.formatting = \"code\";\n      stream.eatWhile('`');\n      var count = stream.current().length\n      if (state.code == 0 && (!state.quote || count == 1)) {\n        state.code = count\n        return getType(state)\n      } else if (count == state.code) { // Must be exact\n        var t = getType(state)\n        state.code = 0\n        return t\n      } else {\n        state.formatting = previousFormatting\n        return getType(state)\n      }\n    } else if (state.code) {\n      return getType(state);\n    }\n\n    if (ch === '\\\\') {\n      stream.next();\n      if (modeCfg.highlightFormatting) {\n        var type = getType(state);\n        var formattingEscape = tokenTypes.formatting + \"-escape\";\n        return type ? type + \" \" + formattingEscape : formattingEscape;\n      }\n    }\n\n    if (ch === '!' && stream.match(/\\[[^\\]]*\\] ?(?:\\(|\\[)/, false)) {\n      state.imageMarker = true;\n      state.image = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      return getType(state);\n    }\n\n    if (ch === '[' && state.imageMarker && stream.match(/[^\\]]*\\](\\(.*?\\)| ?\\[.*?\\])/, false)) {\n      state.imageMarker = false;\n      state.imageAltText = true\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      return getType(state);\n    }\n\n    if (ch === ']' && state.imageAltText) {\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      var type = getType(state);\n      state.imageAltText = false;\n      state.image = false;\n      state.inline = state.f = linkHref;\n      return type;\n    }\n\n    if (ch === '[' && !state.image) {\n      if (state.linkText && stream.match(/^.*?\\]/)) return getType(state)\n      state.linkText = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      return getType(state);\n    }\n\n    if (ch === ']' && state.linkText) {\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      state.linkText = false;\n      state.inline = state.f = stream.match(/\\(.*?\\)| ?\\[.*?\\]/, false) ? linkHref : inlineNormal\n      return type;\n    }\n\n    if (ch === '<' && stream.match(/^(https?|ftps?):\\/\\/(?:[^\\\\>]|\\\\.)+>/, false)) {\n      state.f = state.inline = linkInline;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkInline;\n    }\n\n    if (ch === '<' && stream.match(/^[^> \\\\]+@(?:[^\\\\>]|\\\\.)+>/, false)) {\n      state.f = state.inline = linkInline;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkEmail;\n    }\n\n    if (modeCfg.xml && ch === '<' && stream.match(/^(!--|\\?|!\\[CDATA\\[|[a-z][a-z0-9-]*(?:\\s+[a-z_:.\\-]+(?:\\s*=\\s*[^>]+)?)*\\s*(?:>|$))/i, false)) {\n      var end = stream.string.indexOf(\">\", stream.pos);\n      if (end != -1) {\n        var atts = stream.string.substring(stream.start, end);\n        if (/markdown\\s*=\\s*('|\"){0,1}1('|\"){0,1}/.test(atts)) state.md_inside = true;\n      }\n      stream.backUp(1);\n      state.htmlState = CodeMirror.startState(htmlMode);\n      return switchBlock(stream, state, htmlBlock);\n    }\n\n    if (modeCfg.xml && ch === '<' && stream.match(/^\\/\\w*?>/)) {\n      state.md_inside = false;\n      return \"tag\";\n    } else if (ch === \"*\" || ch === \"_\") {\n      var len = 1, before = stream.pos == 1 ? \" \" : stream.string.charAt(stream.pos - 2)\n      while (len < 3 && stream.eat(ch)) len++\n      var after = stream.peek() || \" \"\n      // See http://spec.commonmark.org/0.27/#emphasis-and-strong-emphasis\n      var leftFlanking = !/\\s/.test(after) && (!punctuation.test(after) || /\\s/.test(before) || punctuation.test(before))\n      var rightFlanking = !/\\s/.test(before) && (!punctuation.test(before) || /\\s/.test(after) || punctuation.test(after))\n      var setEm = null, setStrong = null\n      if (len % 2) { // Em\n        if (!state.em && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n          setEm = true\n        else if (state.em == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n          setEm = false\n      }\n      if (len > 1) { // Strong\n        if (!state.strong && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n          setStrong = true\n        else if (state.strong == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n          setStrong = false\n      }\n      if (setStrong != null || setEm != null) {\n        if (modeCfg.highlightFormatting) state.formatting = setEm == null ? \"strong\" : setStrong == null ? \"em\" : \"strong em\"\n        if (setEm === true) state.em = ch\n        if (setStrong === true) state.strong = ch\n        var t = getType(state)\n        if (setEm === false) state.em = false\n        if (setStrong === false) state.strong = false\n        return t\n      }\n    } else if (ch === ' ') {\n      if (stream.eat('*') || stream.eat('_')) { // Probably surrounded by spaces\n        if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n          return getType(state);\n        } else { // Not surrounded by spaces, back up pointer\n          stream.backUp(1);\n        }\n      }\n    }\n\n    if (modeCfg.strikethrough) {\n      if (ch === '~' && stream.eatWhile(ch)) {\n        if (state.strikethrough) {// Remove strikethrough\n          if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n          var t = getType(state);\n          state.strikethrough = false;\n          return t;\n        } else if (stream.match(/^[^\\s]/, false)) {// Add strikethrough\n          state.strikethrough = true;\n          if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n          return getType(state);\n        }\n      } else if (ch === ' ') {\n        if (stream.match(/^~~/, true)) { // Probably surrounded by space\n          if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n            return getType(state);\n          } else { // Not surrounded by spaces, back up pointer\n            stream.backUp(2);\n          }\n        }\n      }\n    }\n\n    if (modeCfg.emoji && ch === \":\" && stream.match(/^(?:[a-z_\\d+][a-z_\\d+-]*|\\-[a-z_\\d+][a-z_\\d+-]*):/)) {\n      state.emoji = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"emoji\";\n      var retType = getType(state);\n      state.emoji = false;\n      return retType;\n    }\n\n    if (ch === ' ') {\n      if (stream.match(/^ +$/, false)) {\n        state.trailingSpace++;\n      } else if (state.trailingSpace) {\n        state.trailingSpaceNewLine = true;\n      }\n    }\n\n    return getType(state);\n  }\n\n  function linkInline(stream, state) {\n    var ch = stream.next();\n\n    if (ch === \">\") {\n      state.f = state.inline = inlineNormal;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkInline;\n    }\n\n    stream.match(/^[^>]+/, true);\n\n    return tokenTypes.linkInline;\n  }\n\n  function linkHref(stream, state) {\n    // Check if space, and return NULL if so (to avoid marking the space)\n    if(stream.eatSpace()){\n      return null;\n    }\n    var ch = stream.next();\n    if (ch === '(' || ch === '[') {\n      state.f = state.inline = getLinkHrefInside(ch === \"(\" ? \")\" : \"]\");\n      if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n      state.linkHref = true;\n      return getType(state);\n    }\n    return 'error';\n  }\n\n  var linkRE = {\n    \")\": /^(?:[^\\\\\\(\\)]|\\\\.|\\((?:[^\\\\\\(\\)]|\\\\.)*\\))*?(?=\\))/,\n    \"]\": /^(?:[^\\\\\\[\\]]|\\\\.|\\[(?:[^\\\\\\[\\]]|\\\\.)*\\])*?(?=\\])/\n  }\n\n  function getLinkHrefInside(endChar) {\n    return function(stream, state) {\n      var ch = stream.next();\n\n      if (ch === endChar) {\n        state.f = state.inline = inlineNormal;\n        if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n        var returnState = getType(state);\n        state.linkHref = false;\n        return returnState;\n      }\n\n      stream.match(linkRE[endChar])\n      state.linkHref = true;\n      return getType(state);\n    };\n  }\n\n  function footnoteLink(stream, state) {\n    if (stream.match(/^([^\\]\\\\]|\\\\.)*\\]:/, false)) {\n      state.f = footnoteLinkInside;\n      stream.next(); // Consume [\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      state.linkText = true;\n      return getType(state);\n    }\n    return switchInline(stream, state, inlineNormal);\n  }\n\n  function footnoteLinkInside(stream, state) {\n    if (stream.match(/^\\]:/, true)) {\n      state.f = state.inline = footnoteUrl;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var returnType = getType(state);\n      state.linkText = false;\n      return returnType;\n    }\n\n    stream.match(/^([^\\]\\\\]|\\\\.)+/, true);\n\n    return tokenTypes.linkText;\n  }\n\n  function footnoteUrl(stream, state) {\n    // Check if space, and return NULL if so (to avoid marking the space)\n    if(stream.eatSpace()){\n      return null;\n    }\n    // Match URL\n    stream.match(/^[^\\s]+/, true);\n    // Check for link title\n    if (stream.peek() === undefined) { // End of line, set flag to check next line\n      state.linkTitle = true;\n    } else { // More content on line, check if link title\n      stream.match(/^(?:\\s+(?:\"(?:[^\"\\\\]|\\\\\\\\|\\\\.)+\"|'(?:[^'\\\\]|\\\\\\\\|\\\\.)+'|\\((?:[^)\\\\]|\\\\\\\\|\\\\.)+\\)))?/, true);\n    }\n    state.f = state.inline = inlineNormal;\n    return tokenTypes.linkHref + \" url\";\n  }\n\n  var mode = {\n    startState: function() {\n      return {\n        f: blockNormal,\n\n        prevLine: {stream: null},\n        thisLine: {stream: null},\n\n        block: blockNormal,\n        htmlState: null,\n        indentation: 0,\n\n        inline: inlineNormal,\n        text: handleText,\n\n        formatting: false,\n        linkText: false,\n        linkHref: false,\n        linkTitle: false,\n        code: 0,\n        em: false,\n        strong: false,\n        header: 0,\n        setext: 0,\n        hr: false,\n        taskList: false,\n        list: false,\n        listStack: [],\n        quote: 0,\n        trailingSpace: 0,\n        trailingSpaceNewLine: false,\n        strikethrough: false,\n        emoji: false,\n        fencedEndRE: null\n      };\n    },\n\n    copyState: function(s) {\n      return {\n        f: s.f,\n\n        prevLine: s.prevLine,\n        thisLine: s.thisLine,\n\n        block: s.block,\n        htmlState: s.htmlState && CodeMirror.copyState(htmlMode, s.htmlState),\n        indentation: s.indentation,\n\n        localMode: s.localMode,\n        localState: s.localMode ? CodeMirror.copyState(s.localMode, s.localState) : null,\n\n        inline: s.inline,\n        text: s.text,\n        formatting: false,\n        linkText: s.linkText,\n        linkTitle: s.linkTitle,\n        linkHref: s.linkHref,\n        code: s.code,\n        em: s.em,\n        strong: s.strong,\n        strikethrough: s.strikethrough,\n        emoji: s.emoji,\n        header: s.header,\n        setext: s.setext,\n        hr: s.hr,\n        taskList: s.taskList,\n        list: s.list,\n        listStack: s.listStack.slice(0),\n        quote: s.quote,\n        indentedCode: s.indentedCode,\n        trailingSpace: s.trailingSpace,\n        trailingSpaceNewLine: s.trailingSpaceNewLine,\n        md_inside: s.md_inside,\n        fencedEndRE: s.fencedEndRE\n      };\n    },\n\n    token: function(stream, state) {\n\n      // Reset state.formatting\n      state.formatting = false;\n\n      if (stream != state.thisLine.stream) {\n        state.header = 0;\n        state.hr = false;\n\n        if (stream.match(/^\\s*$/, true)) {\n          blankLine(state);\n          return null;\n        }\n\n        state.prevLine = state.thisLine\n        state.thisLine = {stream: stream}\n\n        // Reset state.taskList\n        state.taskList = false;\n\n        // Reset state.trailingSpace\n        state.trailingSpace = 0;\n        state.trailingSpaceNewLine = false;\n\n        if (!state.localState) {\n          state.f = state.block;\n          if (state.f != htmlBlock) {\n            var indentation = stream.match(/^\\s*/, true)[0].replace(/\\t/g, expandedTab).length;\n            state.indentation = indentation;\n            state.indentationDiff = null;\n            if (indentation > 0) return null;\n          }\n        }\n      }\n      return state.f(stream, state);\n    },\n\n    innerMode: function(state) {\n      if (state.block == htmlBlock) return {state: state.htmlState, mode: htmlMode};\n      if (state.localState) return {state: state.localState, mode: state.localMode};\n      return {state: state, mode: mode};\n    },\n\n    indent: function(state, textAfter, line) {\n      if (state.block == htmlBlock && htmlMode.indent) return htmlMode.indent(state.htmlState, textAfter, line)\n      if (state.localState && state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line)\n      return CodeMirror.Pass\n    },\n\n    blankLine: blankLine,\n\n    getType: getType,\n\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n    fold: \"markdown\"\n  };\n  return mode;\n}, \"xml\");\n\nCodeMirror.defineMIME(\"text/markdown\", \"markdown\");\n\nCodeMirror.defineMIME(\"text/x-markdown\", \"markdown\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName || \"\";\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.modeInfo = [\n    {name: \"APL\", mime: \"text/apl\", mode: \"apl\", ext: [\"dyalog\", \"apl\"]},\n    {name: \"PGP\", mimes: [\"application/pgp\", \"application/pgp-encrypted\", \"application/pgp-keys\", \"application/pgp-signature\"], mode: \"asciiarmor\", ext: [\"asc\", \"pgp\", \"sig\"]},\n    {name: \"ASN.1\", mime: \"text/x-ttcn-asn\", mode: \"asn.1\", ext: [\"asn\", \"asn1\"]},\n    {name: \"Asterisk\", mime: \"text/x-asterisk\", mode: \"asterisk\", file: /^extensions\\.conf$/i},\n    {name: \"Brainfuck\", mime: \"text/x-brainfuck\", mode: \"brainfuck\", ext: [\"b\", \"bf\"]},\n    {name: \"C\", mime: \"text/x-csrc\", mode: \"clike\", ext: [\"c\", \"h\", \"ino\"]},\n    {name: \"C++\", mime: \"text/x-c++src\", mode: \"clike\", ext: [\"cpp\", \"c++\", \"cc\", \"cxx\", \"hpp\", \"h++\", \"hh\", \"hxx\"], alias: [\"cpp\"]},\n    {name: \"Cobol\", mime: \"text/x-cobol\", mode: \"cobol\", ext: [\"cob\", \"cpy\"]},\n    {name: \"C#\", mime: \"text/x-csharp\", mode: \"clike\", ext: [\"cs\"], alias: [\"csharp\", \"cs\"]},\n    {name: \"Clojure\", mime: \"text/x-clojure\", mode: \"clojure\", ext: [\"clj\", \"cljc\", \"cljx\"]},\n    {name: \"ClojureScript\", mime: \"text/x-clojurescript\", mode: \"clojure\", ext: [\"cljs\"]},\n    {name: \"Closure Stylesheets (GSS)\", mime: \"text/x-gss\", mode: \"css\", ext: [\"gss\"]},\n    {name: \"CMake\", mime: \"text/x-cmake\", mode: \"cmake\", ext: [\"cmake\", \"cmake.in\"], file: /^CMakeLists\\.txt$/},\n    {name: \"CoffeeScript\", mimes: [\"application/vnd.coffeescript\", \"text/coffeescript\", \"text/x-coffeescript\"], mode: \"coffeescript\", ext: [\"coffee\"], alias: [\"coffee\", \"coffee-script\"]},\n    {name: \"Common Lisp\", mime: \"text/x-common-lisp\", mode: \"commonlisp\", ext: [\"cl\", \"lisp\", \"el\"], alias: [\"lisp\"]},\n    {name: \"Cypher\", mime: \"application/x-cypher-query\", mode: \"cypher\", ext: [\"cyp\", \"cypher\"]},\n    {name: \"Cython\", mime: \"text/x-cython\", mode: \"python\", ext: [\"pyx\", \"pxd\", \"pxi\"]},\n    {name: \"Crystal\", mime: \"text/x-crystal\", mode: \"crystal\", ext: [\"cr\"]},\n    {name: \"CSS\", mime: \"text/css\", mode: \"css\", ext: [\"css\"]},\n    {name: \"CQL\", mime: \"text/x-cassandra\", mode: \"sql\", ext: [\"cql\"]},\n    {name: \"D\", mime: \"text/x-d\", mode: \"d\", ext: [\"d\"]},\n    {name: \"Dart\", mimes: [\"application/dart\", \"text/x-dart\"], mode: \"dart\", ext: [\"dart\"]},\n    {name: \"diff\", mime: \"text/x-diff\", mode: \"diff\", ext: [\"diff\", \"patch\"]},\n    {name: \"Django\", mime: \"text/x-django\", mode: \"django\"},\n    {name: \"Dockerfile\", mime: \"text/x-dockerfile\", mode: \"dockerfile\", file: /^Dockerfile$/},\n    {name: \"DTD\", mime: \"application/xml-dtd\", mode: \"dtd\", ext: [\"dtd\"]},\n    {name: \"Dylan\", mime: \"text/x-dylan\", mode: \"dylan\", ext: [\"dylan\", \"dyl\", \"intr\"]},\n    {name: \"EBNF\", mime: \"text/x-ebnf\", mode: \"ebnf\"},\n    {name: \"ECL\", mime: \"text/x-ecl\", mode: \"ecl\", ext: [\"ecl\"]},\n    {name: \"edn\", mime: \"application/edn\", mode: \"clojure\", ext: [\"edn\"]},\n    {name: \"Eiffel\", mime: \"text/x-eiffel\", mode: \"eiffel\", ext: [\"e\"]},\n    {name: \"Elm\", mime: \"text/x-elm\", mode: \"elm\", ext: [\"elm\"]},\n    {name: \"Embedded Javascript\", mime: \"application/x-ejs\", mode: \"htmlembedded\", ext: [\"ejs\"]},\n    {name: \"Embedded Ruby\", mime: \"application/x-erb\", mode: \"htmlembedded\", ext: [\"erb\"]},\n    {name: \"Erlang\", mime: \"text/x-erlang\", mode: \"erlang\", ext: [\"erl\"]},\n    {name: \"Esper\", mime: \"text/x-esper\", mode: \"sql\"},\n    {name: \"Factor\", mime: \"text/x-factor\", mode: \"factor\", ext: [\"factor\"]},\n    {name: \"FCL\", mime: \"text/x-fcl\", mode: \"fcl\"},\n    {name: \"Forth\", mime: \"text/x-forth\", mode: \"forth\", ext: [\"forth\", \"fth\", \"4th\"]},\n    {name: \"Fortran\", mime: \"text/x-fortran\", mode: \"fortran\", ext: [\"f\", \"for\", \"f77\", \"f90\", \"f95\"]},\n    {name: \"F#\", mime: \"text/x-fsharp\", mode: \"mllike\", ext: [\"fs\"], alias: [\"fsharp\"]},\n    {name: \"Gas\", mime: \"text/x-gas\", mode: \"gas\", ext: [\"s\"]},\n    {name: \"Gherkin\", mime: \"text/x-feature\", mode: \"gherkin\", ext: [\"feature\"]},\n    {name: \"GitHub Flavored Markdown\", mime: \"text/x-gfm\", mode: \"gfm\", file: /^(readme|contributing|history)\\.md$/i},\n    {name: \"Go\", mime: \"text/x-go\", mode: \"go\", ext: [\"go\"]},\n    {name: \"Groovy\", mime: \"text/x-groovy\", mode: \"groovy\", ext: [\"groovy\", \"gradle\"], file: /^Jenkinsfile$/},\n    {name: \"HAML\", mime: \"text/x-haml\", mode: \"haml\", ext: [\"haml\"]},\n    {name: \"Haskell\", mime: \"text/x-haskell\", mode: \"haskell\", ext: [\"hs\"]},\n    {name: \"Haskell (Literate)\", mime: \"text/x-literate-haskell\", mode: \"haskell-literate\", ext: [\"lhs\"]},\n    {name: \"Haxe\", mime: \"text/x-haxe\", mode: \"haxe\", ext: [\"hx\"]},\n    {name: \"HXML\", mime: \"text/x-hxml\", mode: \"haxe\", ext: [\"hxml\"]},\n    {name: \"ASP.NET\", mime: \"application/x-aspx\", mode: \"htmlembedded\", ext: [\"aspx\"], alias: [\"asp\", \"aspx\"]},\n    {name: \"HTML\", mime: \"text/html\", mode: \"htmlmixed\", ext: [\"html\", \"htm\", \"handlebars\", \"hbs\"], alias: [\"xhtml\"]},\n    {name: \"HTTP\", mime: \"message/http\", mode: \"http\"},\n    {name: \"IDL\", mime: \"text/x-idl\", mode: \"idl\", ext: [\"pro\"]},\n    {name: \"Pug\", mime: \"text/x-pug\", mode: \"pug\", ext: [\"jade\", \"pug\"], alias: [\"jade\"]},\n    {name: \"Java\", mime: \"text/x-java\", mode: \"clike\", ext: [\"java\"]},\n    {name: \"Java Server Pages\", mime: \"application/x-jsp\", mode: \"htmlembedded\", ext: [\"jsp\"], alias: [\"jsp\"]},\n    {name: \"JavaScript\", mimes: [\"text/javascript\", \"text/ecmascript\", \"application/javascript\", \"application/x-javascript\", \"application/ecmascript\"],\n     mode: \"javascript\", ext: [\"js\"], alias: [\"ecmascript\", \"js\", \"node\"]},\n    {name: \"JSON\", mimes: [\"application/json\", \"application/x-json\"], mode: \"javascript\", ext: [\"json\", \"map\"], alias: [\"json5\"]},\n    {name: \"JSON-LD\", mime: \"application/ld+json\", mode: \"javascript\", ext: [\"jsonld\"], alias: [\"jsonld\"]},\n    {name: \"JSX\", mime: \"text/jsx\", mode: \"jsx\", ext: [\"jsx\"]},\n    {name: \"Jinja2\", mime: \"text/jinja2\", mode: \"jinja2\", ext: [\"j2\", \"jinja\", \"jinja2\"]},\n    {name: \"Julia\", mime: \"text/x-julia\", mode: \"julia\", ext: [\"jl\"]},\n    {name: \"Kotlin\", mime: \"text/x-kotlin\", mode: \"clike\", ext: [\"kt\"]},\n    {name: \"LESS\", mime: \"text/x-less\", mode: \"css\", ext: [\"less\"]},\n    {name: \"LiveScript\", mime: \"text/x-livescript\", mode: \"livescript\", ext: [\"ls\"], alias: [\"ls\"]},\n    {name: \"Lua\", mime: \"text/x-lua\", mode: \"lua\", ext: [\"lua\"]},\n    {name: \"Markdown\", mime: \"text/x-markdown\", mode: \"markdown\", ext: [\"markdown\", \"md\", \"mkd\"]},\n    {name: \"mIRC\", mime: \"text/mirc\", mode: \"mirc\"},\n    {name: \"MariaDB SQL\", mime: \"text/x-mariadb\", mode: \"sql\"},\n    {name: \"Mathematica\", mime: \"text/x-mathematica\", mode: \"mathematica\", ext: [\"m\", \"nb\", \"wl\", \"wls\"]},\n    {name: \"Modelica\", mime: \"text/x-modelica\", mode: \"modelica\", ext: [\"mo\"]},\n    {name: \"MUMPS\", mime: \"text/x-mumps\", mode: \"mumps\", ext: [\"mps\"]},\n    {name: \"MS SQL\", mime: \"text/x-mssql\", mode: \"sql\"},\n    {name: \"mbox\", mime: \"application/mbox\", mode: \"mbox\", ext: [\"mbox\"]},\n    {name: \"MySQL\", mime: \"text/x-mysql\", mode: \"sql\"},\n    {name: \"Nginx\", mime: \"text/x-nginx-conf\", mode: \"nginx\", file: /nginx.*\\.conf$/i},\n    {name: \"NSIS\", mime: \"text/x-nsis\", mode: \"nsis\", ext: [\"nsh\", \"nsi\"]},\n    {name: \"NTriples\", mimes: [\"application/n-triples\", \"application/n-quads\", \"text/n-triples\"],\n     mode: \"ntriples\", ext: [\"nt\", \"nq\"]},\n    {name: \"Objective-C\", mime: \"text/x-objectivec\", mode: \"clike\", ext: [\"m\"], alias: [\"objective-c\", \"objc\"]},\n    {name: \"Objective-C++\", mime: \"text/x-objectivec++\", mode: \"clike\", ext: [\"mm\"], alias: [\"objective-c++\", \"objc++\"]},\n    {name: \"OCaml\", mime: \"text/x-ocaml\", mode: \"mllike\", ext: [\"ml\", \"mli\", \"mll\", \"mly\"]},\n    {name: \"Octave\", mime: \"text/x-octave\", mode: \"octave\", ext: [\"m\"]},\n    {name: \"Oz\", mime: \"text/x-oz\", mode: \"oz\", ext: [\"oz\"]},\n    {name: \"Pascal\", mime: \"text/x-pascal\", mode: \"pascal\", ext: [\"p\", \"pas\"]},\n    {name: \"PEG.js\", mime: \"null\", mode: \"pegjs\", ext: [\"jsonld\"]},\n    {name: \"Perl\", mime: \"text/x-perl\", mode: \"perl\", ext: [\"pl\", \"pm\"]},\n    {name: \"PHP\", mimes: [\"text/x-php\", \"application/x-httpd-php\", \"application/x-httpd-php-open\"], mode: \"php\", ext: [\"php\", \"php3\", \"php4\", \"php5\", \"php7\", \"phtml\"]},\n    {name: \"Pig\", mime: \"text/x-pig\", mode: \"pig\", ext: [\"pig\"]},\n    {name: \"Plain Text\", mime: \"text/plain\", mode: \"null\", ext: [\"txt\", \"text\", \"conf\", \"def\", \"list\", \"log\"]},\n    {name: \"PLSQL\", mime: \"text/x-plsql\", mode: \"sql\", ext: [\"pls\"]},\n    {name: \"PostgreSQL\", mime: \"text/x-pgsql\", mode: \"sql\"},\n    {name: \"PowerShell\", mime: \"application/x-powershell\", mode: \"powershell\", ext: [\"ps1\", \"psd1\", \"psm1\"]},\n    {name: \"Properties files\", mime: \"text/x-properties\", mode: \"properties\", ext: [\"properties\", \"ini\", \"in\"], alias: [\"ini\", \"properties\"]},\n    {name: \"ProtoBuf\", mime: \"text/x-protobuf\", mode: \"protobuf\", ext: [\"proto\"]},\n    {name: \"Python\", mime: \"text/x-python\", mode: \"python\", ext: [\"BUILD\", \"bzl\", \"py\", \"pyw\"], file: /^(BUCK|BUILD)$/},\n    {name: \"Puppet\", mime: \"text/x-puppet\", mode: \"puppet\", ext: [\"pp\"]},\n    {name: \"Q\", mime: \"text/x-q\", mode: \"q\", ext: [\"q\"]},\n    {name: \"R\", mime: \"text/x-rsrc\", mode: \"r\", ext: [\"r\", \"R\"], alias: [\"rscript\"]},\n    {name: \"reStructuredText\", mime: \"text/x-rst\", mode: \"rst\", ext: [\"rst\"], alias: [\"rst\"]},\n    {name: \"RPM Changes\", mime: \"text/x-rpm-changes\", mode: \"rpm\"},\n    {name: \"RPM Spec\", mime: \"text/x-rpm-spec\", mode: \"rpm\", ext: [\"spec\"]},\n    {name: \"Ruby\", mime: \"text/x-ruby\", mode: \"ruby\", ext: [\"rb\"], alias: [\"jruby\", \"macruby\", \"rake\", \"rb\", \"rbx\"]},\n    {name: \"Rust\", mime: \"text/x-rustsrc\", mode: \"rust\", ext: [\"rs\"]},\n    {name: \"SAS\", mime: \"text/x-sas\", mode: \"sas\", ext: [\"sas\"]},\n    {name: \"Sass\", mime: \"text/x-sass\", mode: \"sass\", ext: [\"sass\"]},\n    {name: \"Scala\", mime: \"text/x-scala\", mode: \"clike\", ext: [\"scala\"]},\n    {name: \"Scheme\", mime: \"text/x-scheme\", mode: \"scheme\", ext: [\"scm\", \"ss\"]},\n    {name: \"SCSS\", mime: \"text/x-scss\", mode: \"css\", ext: [\"scss\"]},\n    {name: \"Shell\", mimes: [\"text/x-sh\", \"application/x-sh\"], mode: \"shell\", ext: [\"sh\", \"ksh\", \"bash\"], alias: [\"bash\", \"sh\", \"zsh\"], file: /^PKGBUILD$/},\n    {name: \"Sieve\", mime: \"application/sieve\", mode: \"sieve\", ext: [\"siv\", \"sieve\"]},\n    {name: \"Slim\", mimes: [\"text/x-slim\", \"application/x-slim\"], mode: \"slim\", ext: [\"slim\"]},\n    {name: \"Smalltalk\", mime: \"text/x-stsrc\", mode: \"smalltalk\", ext: [\"st\"]},\n    {name: \"Smarty\", mime: \"text/x-smarty\", mode: \"smarty\", ext: [\"tpl\"]},\n    {name: \"Solr\", mime: \"text/x-solr\", mode: \"solr\"},\n    {name: \"SML\", mime: \"text/x-sml\", mode: \"mllike\", ext: [\"sml\", \"sig\", \"fun\", \"smackspec\"]},\n    {name: \"Soy\", mime: \"text/x-soy\", mode: \"soy\", ext: [\"soy\"], alias: [\"closure template\"]},\n    {name: \"SPARQL\", mime: \"application/sparql-query\", mode: \"sparql\", ext: [\"rq\", \"sparql\"], alias: [\"sparul\"]},\n    {name: \"Spreadsheet\", mime: \"text/x-spreadsheet\", mode: \"spreadsheet\", alias: [\"excel\", \"formula\"]},\n    {name: \"SQL\", mime: \"text/x-sql\", mode: \"sql\", ext: [\"sql\"]},\n    {name: \"SQLite\", mime: \"text/x-sqlite\", mode: \"sql\"},\n    {name: \"Squirrel\", mime: \"text/x-squirrel\", mode: \"clike\", ext: [\"nut\"]},\n    {name: \"Stylus\", mime: \"text/x-styl\", mode: \"stylus\", ext: [\"styl\"]},\n    {name: \"Swift\", mime: \"text/x-swift\", mode: \"swift\", ext: [\"swift\"]},\n    {name: \"sTeX\", mime: \"text/x-stex\", mode: \"stex\"},\n    {name: \"LaTeX\", mime: \"text/x-latex\", mode: \"stex\", ext: [\"text\", \"ltx\", \"tex\"], alias: [\"tex\"]},\n    {name: \"SystemVerilog\", mime: \"text/x-systemverilog\", mode: \"verilog\", ext: [\"v\", \"sv\", \"svh\"]},\n    {name: \"Tcl\", mime: \"text/x-tcl\", mode: \"tcl\", ext: [\"tcl\"]},\n    {name: \"Textile\", mime: \"text/x-textile\", mode: \"textile\", ext: [\"textile\"]},\n    {name: \"TiddlyWiki\", mime: \"text/x-tiddlywiki\", mode: \"tiddlywiki\"},\n    {name: \"Tiki wiki\", mime: \"text/tiki\", mode: \"tiki\"},\n    {name: \"TOML\", mime: \"text/x-toml\", mode: \"toml\", ext: [\"toml\"]},\n    {name: \"Tornado\", mime: \"text/x-tornado\", mode: \"tornado\"},\n    {name: \"troff\", mime: \"text/troff\", mode: \"troff\", ext: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]},\n    {name: \"TTCN\", mime: \"text/x-ttcn\", mode: \"ttcn\", ext: [\"ttcn\", \"ttcn3\", \"ttcnpp\"]},\n    {name: \"TTCN_CFG\", mime: \"text/x-ttcn-cfg\", mode: \"ttcn-cfg\", ext: [\"cfg\"]},\n    {name: \"Turtle\", mime: \"text/turtle\", mode: \"turtle\", ext: [\"ttl\"]},\n    {name: \"TypeScript\", mime: \"application/typescript\", mode: \"javascript\", ext: [\"ts\"], alias: [\"ts\"]},\n    {name: \"TypeScript-JSX\", mime: \"text/typescript-jsx\", mode: \"jsx\", ext: [\"tsx\"], alias: [\"tsx\"]},\n    {name: \"Twig\", mime: \"text/x-twig\", mode: \"twig\"},\n    {name: \"Web IDL\", mime: \"text/x-webidl\", mode: \"webidl\", ext: [\"webidl\"]},\n    {name: \"VB.NET\", mime: \"text/x-vb\", mode: \"vb\", ext: [\"vb\"]},\n    {name: \"VBScript\", mime: \"text/vbscript\", mode: \"vbscript\", ext: [\"vbs\"]},\n    {name: \"Velocity\", mime: \"text/velocity\", mode: \"velocity\", ext: [\"vtl\"]},\n    {name: \"Verilog\", mime: \"text/x-verilog\", mode: \"verilog\", ext: [\"v\"]},\n    {name: \"VHDL\", mime: \"text/x-vhdl\", mode: \"vhdl\", ext: [\"vhd\", \"vhdl\"]},\n    {name: \"Vue.js Component\", mimes: [\"script/x-vue\", \"text/x-vue\"], mode: \"vue\", ext: [\"vue\"]},\n    {name: \"XML\", mimes: [\"application/xml\", \"text/xml\"], mode: \"xml\", ext: [\"xml\", \"xsl\", \"xsd\", \"svg\"], alias: [\"rss\", \"wsdl\", \"xsd\"]},\n    {name: \"XQuery\", mime: \"application/xquery\", mode: \"xquery\", ext: [\"xy\", \"xquery\"]},\n    {name: \"Yacas\", mime: \"text/x-yacas\", mode: \"yacas\", ext: [\"ys\"]},\n    {name: \"YAML\", mimes: [\"text/x-yaml\", \"text/yaml\"], mode: \"yaml\", ext: [\"yaml\", \"yml\"], alias: [\"yml\"]},\n    {name: \"Z80\", mime: \"text/x-z80\", mode: \"z80\", ext: [\"z80\"]},\n    {name: \"mscgen\", mime: \"text/x-mscgen\", mode: \"mscgen\", ext: [\"mscgen\", \"mscin\", \"msc\"]},\n    {name: \"xu\", mime: \"text/x-xu\", mode: \"mscgen\", ext: [\"xu\"]},\n    {name: \"msgenny\", mime: \"text/x-msgenny\", mode: \"mscgen\", ext: [\"msgenny\"]},\n    {name: \"WebAssembly\", mime: \"text/webassembly\", mode: \"wast\", ext: [\"wat\", \"wast\"]},\n  ];\n  // Ensure all modes have a mime property for backwards compatibility\n  for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n    var info = CodeMirror.modeInfo[i];\n    if (info.mimes) info.mime = info.mimes[0];\n  }\n\n  CodeMirror.findModeByMIME = function(mime) {\n    mime = mime.toLowerCase();\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.mime == mime) return info;\n      if (info.mimes) for (var j = 0; j < info.mimes.length; j++)\n        if (info.mimes[j] == mime) return info;\n    }\n    if (/\\+xml$/.test(mime)) return CodeMirror.findModeByMIME(\"application/xml\")\n    if (/\\+json$/.test(mime)) return CodeMirror.findModeByMIME(\"application/json\")\n  };\n\n  CodeMirror.findModeByExtension = function(ext) {\n    ext = ext.toLowerCase();\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.ext) for (var j = 0; j < info.ext.length; j++)\n        if (info.ext[j] == ext) return info;\n    }\n  };\n\n  CodeMirror.findModeByFileName = function(filename) {\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.file && info.file.test(filename)) return info;\n    }\n    var dot = filename.lastIndexOf(\".\");\n    var ext = dot > -1 && filename.substring(dot + 1, filename.length);\n    if (ext) return CodeMirror.findModeByExtension(ext);\n  };\n\n  CodeMirror.findModeByName = function(name) {\n    name = name.toLowerCase();\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.name.toLowerCase() == name) return info;\n      if (info.alias) for (var j = 0; j < info.alias.length; j++)\n        if (info.alias[j].toLowerCase() == name) return info;\n    }\n  };\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter, line) {\n      return base.indent(state.base, textAfter, line);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n"],"sourceRoot":""}